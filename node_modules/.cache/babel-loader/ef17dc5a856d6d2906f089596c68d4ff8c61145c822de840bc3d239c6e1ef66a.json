{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\areeb\\\\Downloads\\\\hacakaton\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CameraCapture from './components/CameraCapture';\nimport ImageUploader from './components/ImageUploader';\nimport TextEditor from './components/TextEditor';\nimport { recognizeText } from './utils/ocr';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageData, setImageData] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [cameraActive, setCameraActive] = useState(false);\n  const handleImageInput = async dataUrl => {\n    setImageData(dataUrl);\n    setLoading(true);\n    try {\n      const text = await recognizeText(dataUrl);\n      setExtractedText(text);\n    } catch (err) {\n      alert('OCR failed: ' + err.message);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OCR App Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCameraActive(true),\n        children: \"Open Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n        onUpload: handleImageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), cameraActive && /*#__PURE__*/_jsxDEV(CameraCapture, {\n      onCapture: dataUrl => {\n        handleImageInput(dataUrl); // feed captured image to OCR\n        setCameraActive(false); // close camera UI after capture\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing image, please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), imageData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Image Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageData,\n        alt: \"Captured or Uploaded\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(TextEditor, {\n      text: extractedText,\n      onChange: setExtractedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nca7X91uc9D1EexR2ZbIIvZDiFY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CameraCapture","ImageUploader","TextEditor","recognizeText","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","imageData","setImageData","extractedText","setExtractedText","loading","setLoading","cameraActive","setCameraActive","handleImageInput","dataUrl","text","err","alert","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","onUpload","onCapture","src","alt","maxWidth","onChange","_c","$RefreshReg$"],"sources":["C:/Users/areeb/Downloads/hacakaton/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CameraCapture from './components/CameraCapture';\nimport ImageUploader from './components/ImageUploader';\nimport TextEditor from './components/TextEditor';\nimport { recognizeText } from './utils/ocr';\n\nfunction App() {\n  const [imageData, setImageData] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [cameraActive, setCameraActive] = useState(false);\n\n  const handleImageInput = async (dataUrl) => {\n    setImageData(dataUrl);\n    setLoading(true);\n    try {\n      const text = await recognizeText(dataUrl);\n      setExtractedText(text);\n    } catch (err) {\n      alert('OCR failed: ' + err.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <h1>OCR App Interface</h1>\n\n      <div style={{ marginBottom: '1rem' }}>\n        {/* Camera button triggers camera capture flow exactly */}\n        <button onClick={() => setCameraActive(true)}>Open Camera</button>\n\n        {/* Image uploader unchanged */}\n        <ImageUploader onUpload={handleImageInput} />\n      </div>\n\n      {/* Show camera capture only when activated */}\n      {cameraActive && (\n        <CameraCapture\n          onCapture={(dataUrl) => {\n            handleImageInput(dataUrl);  // feed captured image to OCR\n            setCameraActive(false);     // close camera UI after capture\n          }}\n        />\n      )}\n\n      {loading && <p>Processing image, please wait...</p>}\n\n      {imageData && (\n        <>\n          <h3>Image Preview</h3>\n          <img src={imageData} alt=\"Captured or Uploaded\" style={{ maxWidth: '100%' }} />\n        </>\n      )}\n\n      <TextEditor text={extractedText} onChange={setExtractedText} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}